[{"title":"SpringFramework","date":"2018-02-08T12:29:23.000Z","path":"2018/02/08/springFramework/","text":"Spring framework 프레임워크란, 특정한 목적에 맞게 프로그램이을 쉽게 하기 위한 약속입니다.자바 언어를 기반으로 다양한 어플리케이션을 제작하기 위한 약속된 프로그래밍 틀 이다.스프링의 경우 톰캣을 이용할수 있다. (접근하기 쉽다) eclipse / help / market place 에서 STS 검색후 install DI(Dependency Injection 의존성 주입) 와 IOC 컨테이너(Spring) 스프링이란 부품을 생성하고 조립하는 라이브러리 집합체라고 할 수 있다. AOP(Aspect Oriented Programming)공통기능을 모든 모듈에 적용하기 위한 방법으로 상속을 통한 방법이 있다.상속도 좋은 방법이지만 java에서 다중상속이 불가하므로 AOP방법으로 한다.-공통기능을 분리시켜놓고 공통기능을 필요로 하는 핵심기능들에서 사용하는방식(공통기능을 재활용하는 방식) AOP용어-Aspect: 공통기능 Advice: Aspect의 기능자체-Joinpoint: Advice를 적용해야 되는 부분(ex 필드, 메소드) (스프링에서는 메소드만 해당)-Pointcut: Joinpoint의 부분으로 실제로 Advice가 적용된 부분-Weaving: Advice를 핵심 기능에 적용 하는 행위 스프링에서 AOP 구현 방법: proxy를 이용한다 스프링에서 AOP 구현 방식 : XML스키마 기반으로 구현, @Aspect 어노테이션 기반으로 구현Advice 종류 : 메소드 실행전에 advice 실행 : 정상적으로 메소드 실행 후에 advice 실행 : 메소드실행중 exception 발생시 advice 실행 : 메소드 실행중 exception 이 발생하여도 advice 실행 : 메서드 실행 전/후 및 exception 발생 시 advice 실행 AspectJ Pointcut 표현식 pointcut을 지정할 때 사용하는 표현식으로 AspectJ 문법을 사용 * : 모든. : 현재.. : 0개 이상 스프링 MVC 개요Spring이 웹 프레임워크로서 우수성이 인정되었기 때문에 유명해졌다@Validator를 이용한 검증폼에서 전달되는 데이터를 컴맨드 객체에 담아 컨트롤 객체에 전달한다.이때 커멘드 객체의 유효성을 검사 할 수 있다.참고로 javascript를 이용하는 것은 클라이언트에서 검사하는 방법이고지금 하는 Validator 인터페이스를 이용하는 방법은 서버에서 검사하는 방법이다.","tags":[{"name":"web","slug":"web","permalink":"https://jinhyunly.github.io/tags/web/"},{"name":"spring","slug":"spring","permalink":"https://jinhyunly.github.io/tags/spring/"}]},{"title":"test3","date":"2018-02-08T10:52:58.000Z","path":"2018/02/08/test3/","text":"node.jsasdfdassdfa javascriptasdfasdfsdf","tags":[{"name":"javascript","slug":"javascript","permalink":"https://jinhyunly.github.io/tags/javascript/"},{"name":"node.js","slug":"node-js","permalink":"https://jinhyunly.github.io/tags/node-js/"}]},{"title":"test2","date":"2018-02-08T10:52:54.000Z","path":"2018/02/08/helloz/","text":"laravelhhlkajsdf webasdfasdfsdf 1.php123Class PHP &#123;&#125;","tags":[{"name":"web","slug":"web","permalink":"https://jinhyunly.github.io/tags/web/"},{"name":"php","slug":"php","permalink":"https://jinhyunly.github.io/tags/php/"},{"name":"laravel","slug":"laravel","permalink":"https://jinhyunly.github.io/tags/laravel/"}]},{"title":"image load","date":"2018-02-08T09:06:38.000Z","path":"2018/02/08/first-post/","text":"MarkDown 형식으로 이미지 올리는법 image how can I image load1![Alt text](/imageFolder_Name/imageFile_Name.jpg &quot;avatar&quot;)","tags":[{"name":"test","slug":"test","permalink":"https://jinhyunly.github.io/tags/test/"}]},{"title":"Hello World","date":"2018-02-08T08:59:33.213Z","path":"2018/02/08/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]